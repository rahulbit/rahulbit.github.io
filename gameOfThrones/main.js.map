{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/gameofthrones.service.ts","webpack:///./src/app/home-view/home-view.component.css","webpack:///./src/app/home-view/home-view.component.html","webpack:///./src/app/home-view/home-view.component.ts","webpack:///./src/app/singlebook-view/singlebook-view.component.css","webpack:///./src/app/singlebook-view/singlebook-view.component.html","webpack:///./src/app/singlebook-view/singlebook-view.component.ts","webpack:///./src/app/singlecharacter-view/singlecharacter-view.component.css","webpack:///./src/app/singlecharacter-view/singlecharacter-view.component.html","webpack:///./src/app/singlecharacter-view/singlecharacter-view.component.ts","webpack:///./src/app/singlehouse-view/singlehouse-view.component.css","webpack:///./src/app/singlehouse-view/singlehouse-view.component.html","webpack:///./src/app/singlehouse-view/singlehouse-view.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n\\n<div class=\\\"conltainer-fluid\\\" style=\\\"text-align:center\\\">\\n   <header>\\n     <img src=\\\"assets/home.jpg\\\" class=\\\"img-fluid\\\" style=\\\"width: 100% ; height:70vh\\\">\\n     </header>\\n     <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeViewComponent } from './home-view/home-view.component';\nimport { RouterModule ,Routes }  from '@angular/router';\nimport { SinglebookViewComponent } from './singlebook-view/singlebook-view.component';\nimport { SinglehouseViewComponent } from './singlehouse-view/singlehouse-view.component';\nimport { SinglecharacterViewComponent } from './singlecharacter-view/singlecharacter-view.component';\n\nimport { HttpClientModule }  from '@angular/common/http';\nimport {GameofthronesService}  from './gameofthrones.service';\n\nimport { OrderModule } from 'ngx-order-pipe';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeViewComponent,\n    SinglebookViewComponent,\n    SinglehouseViewComponent,\n    SinglecharacterViewComponent \n    \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    OrderModule,\n    RouterModule.forRoot([\n      {path:'home', component:HomeViewComponent},\n       {path:'' , redirectTo:'home', pathMatch:'full'},\n      {path:'book/:bookId', component:SinglebookViewComponent},\n      {path:'house/:houseId' , component:SinglehouseViewComponent},\n      {path:'character/:characterId', component:SinglecharacterViewComponent}\n      \n    \n    ])\n  ],\n  providers: [GameofthronesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameofthronesService {\n\n  public singleViewBook;\n  public baseUrl = \"https://anapioficeandfire.com/api\";\n\n\n  constructor(public http: HttpClient) {\n    console.log(\"service is called\");\n  }\n\n  public getBooks(): any {\n    let myResponse = this.http.get(this.baseUrl + '/books?page=1&pageSize=10');\n    console.log(myResponse);\n    return myResponse;\n  }\n  public getHouses(): any {\n    let myResponse1 = this.http.get(this.baseUrl + '/houses?page=1&pageSize=10');\n    console.log(myResponse1);\n    return myResponse1;\n\n  }\n  public getcharacters(pageno): any {\n    let myResponse2 = this.http.get(this.baseUrl + '/characters' + '?page=' + pageno + '&pageSize=10');\n    console.log(myResponse2);\n    return myResponse2;\n  }\n\n  public getSingleBookView(bookId): any {\n    let myResponse3 = this.http.get(this.baseUrl + '/books/' + bookId);\n    console.log(myResponse3);\n    return myResponse3;\n  }\n\n  public getSingleCharacterView(characterId) {\n    let myResponse4 = this.http.get(this.baseUrl + '/characters/' + characterId);\n    console.log(myResponse4);\n    return myResponse4;\n  }\n\n  public getSingleHouseView(houseId) {\n    let myResponse5 = this.http.get(this.baseUrl + '/houses/' + houseId);\n    console.log(myResponse5);\n    return myResponse5;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align: center\\\">\\n  <div class=\\\"row \\\">\\n    <div clas=\\\"row\\\" *ngIf=\\\"allbooks.length>0\\\">\\n      <div class=\\\"col-md-4 m-4 p-3 \\\" *ngFor=\\\"let books of allbooks|orderBy:released\\\">\\n\\n        <div class=\\\"card\\\" style=\\\"width: 18rem;background-color:blue;color: beige  \\\">\\n          <img class=\\\"card-img-top\\\" src=\\\"assets/Book.jpg\\\" alt=\\\"Card image cap\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Title:{{books.name}}</h5>\\n            <p class=\\\"card-text\\\">Released on {{books.released|date}}</p>\\n            <a [routerLink]=\\\"['/book', books.url.replace('https://anapioficeandfire.com/api/books/' ,'')]\\\" class=\\\"btn btn-primary\\\">More info</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div clas=\\\"row\\\" *ngIf=\\\"allhouse.length>0\\\">\\n      <div class=\\\"col-md-4  m-4 p-3\\\" *ngFor=\\\"let houses of allhouse|orderBy:name\\\">\\n\\n        <div class=\\\"card\\\" style=\\\"width: 18rem;background-color:blueviolet;color: beige  \\\">\\n          <img class=\\\"card-img-top\\\" src=\\\"assets/house1.jpg\\\" alt=\\\"Card image cap\\\">\\n          <div class=\\\"card-body\\\">\\n\\n            <h5 class=\\\"card-title\\\">{{houses.name}}</h5>\\n            <p class=\\\"card-text\\\">\\n              <span *ngIf=\\\"houses.coatOfArms.length>0\\\"> {{houses.coatOfArms}}</span>\\n              <span *ngIf=\\\"houses.coatOfArms.length<1\\\">not available</span>\\n            </p>\\n            <a [routerLink]=\\\"['/house', houses.url.replace('https://anapioficeandfire.com/api/houses/','')]\\\" class=\\\"btn btn-primary\\\">More Info</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div clas=\\\"row\\\" *ngIf=\\\"allcharacter.length>0\\\">\\n      <div class=\\\"col-md-4  m-4 p-3\\\" *ngFor=\\\"let characters of allcharacter|orderBy:name\\\">\\n\\n        <div class=\\\"card\\\" style=\\\"width: 18rem;background-color:brown;color: beige  \\\">\\n          <img class=\\\"card-img-top\\\" src=\\\"assets/character.jpg\\\" alt=\\\"Card image cap\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Name:{{characters.name}}</h5>\\n            <p class=\\\"card-text\\\"></p>\\n            <a [routerLink]=\\\"['/character', characters.url.replace('https://anapioficeandfire.com/api/characters/' ,'')]\\\" class=\\\"btn btn-primary\\\">More Info</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { GameofthronesService } from '../gameofthrones.service';\n\n\n\n@Component({\n  selector: 'app-home-view',\n  templateUrl: './home-view.component.html',\n  styleUrls: ['./home-view.component.css']\n})\nexport class HomeViewComponent implements OnInit {\n\n  public allbooks = [];\n  public allhouse = [];\n  public allcharacter = [];\n  public charactersize = 50;\n\n\n  constructor(public got: GameofthronesService) {\n    console.log(\"home-view component is called\");\n  }\n\n  ngOnInit() {\n\n\n    this.allbooks = this.got.getBooks().subscribe(\n\n      data => {\n        console.log(data);\n        this.allbooks = data;\n\n      },\n      error => {\n        console.log(\"some error occured\");\n        console.log(error.errorMessage);\n      })\n\n\n    console.log(this.allbooks);\n\n\n    this.allhouse = this.got.getHouses().subscribe(\n\n      data => {\n        console.log(data);\n        this.allhouse = data;\n      },\n      error => {\n        console.log(\"some error occured\");\n        console.log(error.errorMessage);\n      })\n\n\n    console.log(this.allhouse);\n\n    for (let i = 0; i < this.charactersize; i++) {\n      this.allcharacter = this.got.getcharacters([i]).subscribe(\n        data => {\n          console.log(data);\n          this.allcharacter = data;\n        },\n        error => {\n          console.log(\"some error occured\");\n          console.log(error.errorMessage);\n        })\n    }\n\n    console.log(this.allcharacter);\n\n\n  }\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div clas=\\\"row \\\" *ngIf=\\\"singleViewBook\\\">\\n    <div class=\\\"col-md-12 m-5  p-5\\\" style=\\\"text-align: center\\\">\\n\\n      <div class=\\\"card\\\" style=\\\"background-color:blue;color: beige  \\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"assets/Book.jpg\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n          <p class=\\\"card-title\\\" style=\\\"font-size:20px\\\">Title:{{ singleViewBook.name}}</p>\\n\\n          <p class=\\\"card-text\\\" style=\\\"font-size:15px\\\">Released on: {{singleViewBook.released|date}} </p>\\n\\n          <p class=\\\"card-text\\\" style=\\\"font-size:15px\\\">Isbn no:{{singleViewBook.isbn}} </p>\\n\\n          <p class=\\\"card-text\\\" style=\\\"font-size:15px\\\">Country: {{singleViewBook.country}} </p>\\n\\n          <p class=\\\"card-text\\\" style=\\\"font-size:15px\\\">Publisher:{{singleViewBook.publisher}}\\n          </p>\\n\\n          <p class=\\\"card-text\\\" style=\\\"font-size:15px\\\" *ngIf=\\\"singleViewBook.authors.length>0\\\">Authors:\\n            <span *ngFor=\\\"let author of singleViewBook.authors , let first = first,  let last = last\\\"> {{author}}{{last?'':','}}</span>\\n          </p>\\n\\n          <p class=\\\"card-text\\\" style=\\\"font-size:15px\\\">MediaType: {{singleViewBook.mediaType}} </p>\\n\\n          <p class=\\\"card-text\\\" style=\\\"font-size:15px\\\" *ngIf=\\\"singleViewBook.povCharacters.length>0\\\">povCharacters:\\n            <br>\\n            <br>\\n            <span *ngFor=\\\"let pov of singleViewBook.povCharacters\\\" style=\\\"font-size:15px; color:beige\\\">{{pov}}\\n              <br>\\n              <br>\\n            </span>\\n          </p>\\n\\n\\n\\n          <a class=\\\"btn btn-primary\\\" (click)= goBack()>Go Back</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n\nimport { GameofthronesService } from '../gameofthrones.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-singlebook-view',\n  templateUrl: './singlebook-view.component.html',\n  styleUrls: ['./singlebook-view.component.css'],\n  providers: [Location]\n})\nexport class SinglebookViewComponent implements OnInit {\n\n\n\n\n  public singleViewBook;\n\n  constructor(private _route: ActivatedRoute, private router: Router, public got: GameofthronesService, public location: Location) {\n\n  }\n\n  ngOnInit() {\n\n    let myBookId = this._route.snapshot.paramMap.get('bookId');\n    console.log(myBookId);\n\n    this.singleViewBook = this.got.getSingleBookView(myBookId).subscribe(\n\n      data => {\n        console.log(data);\n\n        this.singleViewBook = data;\n      },\n      error => {\n        console.log(\"some error occured\");\n        console.log(error.errorMessage);\n      }\n    )\n    console.log(this.singleViewBook);\n\n\n  }\n\n  public goBack(): any {\n\n    this.location.back();\n  }\n\n\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div clas=\\\"row\\\" *ngIf=\\\"singleViewCharacter\\\">\\n    <div class=\\\"col-md-12  m-5 p-5\\\">\\n\\n      <div class=\\\"card\\\" style=\\\"background-color:brown;color: beige  \\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"assets/character.jpg\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Name:{{singleViewCharacter.name}}</h5>\\n\\n          <p class=\\\"card-text\\\">Gender:\\n            <span *ngIf=\\\"singleViewCharacter.gender.length>0\\\"> {{singleViewCharacter.gender}}</span>\\n            <span *ngIf=\\\"singleViewCharacter.gender.length<1\\\">not Available</span>\\n          </p>\\n\\n          <p class=\\\"card-text\\\">Culture:\\n            <span *ngIf=\\\"singleViewCharacter.culture.length>0\\\">{{singleViewCharacter.culture}}</span>\\n            <span *ngIf=\\\"singleViewCharacter.culture.length<1\\\">Not Available</span>\\n\\n          </p>\\n          <p class=\\\"card-text\\\">Born:\\n            <span *ngIf=\\\"singleViewCharacter.born.length>0\\\">{{singleViewCharacter.born}}</span>\\n            <span *ngIf=\\\"singleViewCharacter.born.length<1\\\">Not Available</span>\\n          </p>\\n          <p class=\\\"card-text\\\">Died:\\n            <span *ngIf=\\\"singleViewCharacter.died.length>0\\\">\\n              {{singleViewCharacter.died}}</span>\\n            <span *ngIf=\\\"singleViewCharacter.died.length <1\\\">Not Available</span>\\n          </p>\\n          <p class=\\\"card-text\\\">Father:\\n            <br>\\n            <span *ngIf=\\\"singleViewCharacter.father.length>0\\\">{{singleViewCharacter.father}}</span>\\n            <span *ngIf=\\\"singleViewCharacter.father.length<1\\\">Not Available</span>\\n          </p>\\n          <p class=\\\"card-text\\\">Mother:\\n            <br>\\n            <span *ngIf=\\\"singleViewCharacter.mother.length>0\\\">\\n              <a>{{singleViewCharacter.mother}}</a>\\n            </span>\\n            <span *ngIf=\\\"singleViewCharacter.mother.length<1\\\">Not Available</span>\\n          </p>\\n          <p class=\\\"card-text\\\">Titles:\\n            <br>\\n            <span *ngIf=\\\"singleViewCharacter.titles.length>0\\\">{{singleViewCharacter.titles}}\\n              <br>\\n            </span>\\n            <span *ngIf=\\\"singleViewCharacter.titles.length<1\\\">Not Available</span>\\n          </p>\\n          <p class=\\\"card-text\\\">Spouse:\\n            <br>\\n            <span *ngIf=\\\"singleViewCharacter.spouse.length>0\\\">{{singleViewCharacter.spouse}}</span>\\n            <span *ngIf=\\\"singleViewCharacter.spouse.length<1\\\">Not Available</span>\\n          </p>\\n          <p class=\\\"card-text\\\">Aliases:\\n            <br>\\n            <span *ngIf=\\\"singleViewCharacter.aliases.length>0\\\">{{singleViewCharacter.aliases}}</span>\\n            <span *ngIf=\\\"singleViewCharacter.aliases.length<1\\\">Not Available</span>\\n          </p>\\n          <p class=\\\"card-text\\\">Tv-Series:\\n            <br>\\n            <span *ngIf=\\\"singleViewCharacter.tvSeries.length>0\\\">{{singleViewCharacter.tvSeries}}</span>\\n            <span *ngIf=\\\"singleViewCharacter.tvSeries.length<1\\\">Not Available</span>\\n          </p>\\n\\n          <a class=\\\"btn btn-primary\\\" (click)= goBack()>Go back</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { GameofthronesService } from '../gameofthrones.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, EMPTY } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-singlecharacter-view',\n  templateUrl: './singlecharacter-view.component.html',\n  styleUrls: ['./singlecharacter-view.component.css'],\n  providers: [Location]\n})\nexport class SinglecharacterViewComponent implements OnInit {\n\n\n  public singleViewCharacter;\n\n  constructor(private _route: ActivatedRoute, private router: Router, public got: GameofthronesService, public location: Location) {\n\n  }\n\n  ngOnInit() {\n\n    let myId = this._route.snapshot.paramMap.get('characterId');\n    console.log(myId);\n\n    this.singleViewCharacter = this.got.getSingleCharacterView(myId).subscribe(\n\n      data => {\n        console.log(data);\n        this.singleViewCharacter = data;\n      },\n      error => {\n        console.log(\"some error occured\");\n        console.log(error.errorMessage);\n      }\n    )\n\n    console.log(this.singleViewCharacter);\n\n\n  }\n\n  public goBack(): any {\n    this.location.back();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div clas=\\\"row\\\" *ngIf=\\\"singleHouseView\\\">\\n    <div class=\\\"col-md-12 m-5 p-5 \\\">\\n\\n      <div class=\\\"card  text-center\\\" style=\\\"background-color:brown;color: beige  \\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"assets/house1.jpg\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Name:{{singleHouseView.name}}</h5>\\n\\n          <p class=\\\"card-text\\\">region:\\n            <span *ngIf=\\\"singleHouseView.region.length>0\\\"> {{singleHouseView.region}}</span>\\n            <span *ngIf=\\\"singleHouseView.region.length<1\\\">not Available</span>\\n          </p>\\n\\n          <p class=\\\"card-text\\\">coatOfArms:\\n            <span *ngIf=\\\"singleHouseView.coatOfArms.length>0\\\">{{singleHouseView.coatOfArms}}</span>\\n            <span *ngIf=\\\"singleHouseView.coatOfArms.length<1\\\">Not Available</span>\\n\\n          </p>\\n          <p class=\\\"card-text\\\">Words:\\n            <span *ngIf=\\\"singleHouseView.words.length>0\\\">{{singleHouseView.words}}</span>\\n            <span *ngIf=\\\"singleHouseView.words.length<1\\\">Not Available</span>\\n          </p>\\n          <p class=\\\"card-text\\\">Titles:\\n            <span *ngIf=\\\"singleHouseView.titles.length>0   \\\">\\n              {{singleHouseView.titles}}</span>\\n            <span *ngIf=\\\"singleHouseView.titles.length <1\\\">Not Available</span>\\n          </p>\\n\\n          <p class=\\\"card-text\\\">Seats:\\n            <br>\\n            <span *ngIf=\\\"singleHouseView.seats.length>0\\\">{{singleHouseView.seats}}</span>\\n            <span *ngIf=\\\"singleHouseView.seats.length<1\\\">Not Available</span>\\n          </p>\\n\\n          <p class=\\\"card-text\\\">CurrentLord:\\n            <br>\\n            <span *ngIf=\\\"singleHouseView.currentLord.length>0\\\">{{singleHouseView.currentLord}}</span>\\n            <span *ngIf=\\\"singleHouseView.currentLord.length<1\\\">Not Available</span>\\n          </p>\\n          <p class=\\\"card-text\\\">Heir:\\n            <br>\\n            <span *ngIf=\\\"singleHouseView.heir.length>0\\\">{{singleHouseView.heir}}</span>\\n            <span *ngIf=\\\"singleHouseView.heir.length<1\\\">Not Available</span>\\n          </p>\\n          <p class=\\\"card-text\\\">overlord:\\n            <br>\\n            <span *ngIf=\\\"singleHouseView.overlord.length>0\\\">{{singleHouseView.overlord}}</span>\\n            <span *ngIf=\\\"singleHouseView.overlord.length<1\\\">Not Available</span>\\n          </p>\\n          <p class=\\\"card-text\\\">founded:\\n            <br>\\n            <span *ngIf=\\\"singleHouseView.founded.length>0\\\">{{singleHouseView.founded}}</span>\\n            <span *ngIf=\\\"singleHouseView.founded.length<1\\\">Not Available</span>\\n          </p>\\n\\n          <p class=\\\"card-text\\\">founder:\\n            <br>\\n            <span *ngIf=\\\"singleHouseView.founder.length>0\\\">{{singleHouseView.founder}}</span>\\n            <span *ngIf=\\\"singleHouseView.founder.length<1\\\">Not Available</span>\\n          </p>\\n\\n          <p class=\\\"card-text\\\">diedOut:\\n            <br>\\n            <span *ngIf=\\\"singleHouseView.diedOut.length>0\\\">{{singleHouseView.diedOut}}</span>\\n            <span *ngIf=\\\"singleHouseView.diedOut.length<1\\\">Not Available</span>\\n          </p>\\n\\n          <p class=\\\"card-text\\\">ancestralWeapons:\\n            <br>\\n            <span *ngIf=\\\"singleHouseView.ancestralWeapons.length>0\\\">{{singleHouseView.ancestralWeapons}}</span>\\n            <span *ngIf=\\\"singleHouseView.ancestralWeapons.length<1\\\">Not Available</span>\\n          </p>\\n\\n          <p class=\\\"card-text\\\" *ngIf=\\\"singleHouseView.swornMembers.length>0\\\">swornMembers:\\n            <br>\\n            <br>\\n            <span *ngFor=\\\"let Member of singleHouseView.swornMembers\\\">{{Member}}\\n              <br> </span>\\n            <span *ngIf=\\\"singleHouseView.swornMembers.length<1\\\">Not Available</span>\\n          </p>\\n\\n\\n          <a class=\\\"btn btn-primary\\\" (click)= goBack()>Go back</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { GameofthronesService } from '../gameofthrones.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, EMPTY } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-singlehouse-view',\n  templateUrl: './singlehouse-view.component.html',\n  styleUrls: ['./singlehouse-view.component.css'],\n  providers: [Location]\n})\nexport class SinglehouseViewComponent implements OnInit {\n\n  public singleHouseView;\n\n  constructor(private route: ActivatedRoute, private router: Router, public got: GameofthronesService, public location: Location) { }\n\n  ngOnInit() {\n\n    let myId = this.route.snapshot.paramMap.get('houseId');\n    console.log(myId);\n    this.singleHouseView = this.got.getSingleHouseView(myId).subscribe(\n      data => {\n        console.log(data);\n        this.singleHouseView = data;\n      },\n\n      error => {\n        console.log(\"some error occured\");\n        console.log(error.errorMesage);\n      }\n    )\n  }\n\n  public goBack(): any {\n    this.location.back();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}